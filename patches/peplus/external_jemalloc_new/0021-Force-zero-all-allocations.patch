From 3808f930069af3bfdff4b6c8eed7d10f5a8f3194 Mon Sep 17 00:00:00 2001
From: Christopher Ferris <cferris@google.com>
Date: Thu, 2 Jun 2022 15:33:41 -0700
Subject: [PATCH 21/22] Force zero all allocations.

Modify the code to always pass the zero flag to any allocations.

Test: New bionic unit tests pass that verify allocations always
Test: zero out the allocation.
Change-Id: I981b845fad03ea9a23e8c2459e28b37a8cdc633d
Signed-off-by: minaripenguin <alexfinhart@gmail.com>
Signed-off-by: Pranav Vashi <neobuddy89@gmail.com>
---
 .../jemalloc/internal/jemalloc_internal_inlines_c.h | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/include/jemalloc/internal/jemalloc_internal_inlines_c.h b/include/jemalloc/internal/jemalloc_internal_inlines_c.h
index cdb10eb2..c3538c0c 100644
--- a/include/jemalloc/internal/jemalloc_internal_inlines_c.h
+++ b/include/jemalloc/internal/jemalloc_internal_inlines_c.h
@@ -42,6 +42,8 @@ JEMALLOC_ALWAYS_INLINE void *
 iallocztm(tsdn_t *tsdn, size_t size, szind_t ind, bool zero, tcache_t *tcache,
     bool is_internal, arena_t *arena, bool slow_path) {
 	void *ret;
+	/* Always force returning zeroed data. */
+	zero = true;
 
 	assert(!is_internal || tcache == NULL);
 	assert(!is_internal || arena == NULL || arena_is_auto(arena));
@@ -68,6 +70,9 @@ ipallocztm(tsdn_t *tsdn, size_t usize, size_t alignment, bool zero,
     tcache_t *tcache, bool is_internal, arena_t *arena) {
 	void *ret;
 
+	/* Always force returning zeroed data. */
+	zero = true;
+
 	assert(usize != 0);
 	assert(usize == sz_sa2u(usize, alignment));
 	assert(!is_internal || tcache == NULL);
@@ -135,6 +140,10 @@ JEMALLOC_ALWAYS_INLINE void *
 iralloct_realign(tsdn_t *tsdn, void *ptr, size_t oldsize, size_t size,
     size_t alignment, bool zero, tcache_t *tcache, arena_t *arena,
     hook_ralloc_args_t *hook_args) {
+
+	/* Always force returning zeroed data. */
+	zero = true;
+
 	witness_assert_depth_to_rank(tsdn_witness_tsdp_get(tsdn),
 	    WITNESS_RANK_CORE, 0);
 	void *p;
@@ -176,6 +185,8 @@ iralloct(tsdn_t *tsdn, void *ptr, size_t oldsize, size_t size, size_t alignment,
 {
 	assert(ptr != NULL);
 	assert(size != 0);
+	/* Always force returning zeroed data. */
+	zero = true;
 	witness_assert_depth_to_rank(tsdn_witness_tsdp_get(tsdn),
 	    WITNESS_RANK_CORE, 0);
 
@@ -205,6 +216,8 @@ ixalloc(tsdn_t *tsdn, void *ptr, size_t oldsize, size_t size, size_t extra,
     size_t alignment, bool zero, size_t *newsize) {
 	assert(ptr != NULL);
 	assert(size != 0);
+	/* Always force returning zeroed data. */
+	zero = true;
 	witness_assert_depth_to_rank(tsdn_witness_tsdp_get(tsdn),
 	    WITNESS_RANK_CORE, 0);
 
-- 
2.32.0

