From 9ba0aadce7630bec21684848ec80173f8cfcfd37 Mon Sep 17 00:00:00 2001
From: ezio84 <brabus84@gmail.com>
Date: Tue, 12 Sep 2017 10:50:02 +0200
Subject: [PATCH] Settings: Status network traffic [2/2]

arrow-edits:
 - migrate to androidx

ReallySnow:
 - SwitchPreference -> MainSwitchPreference
 - Clean up code

Change-Id: I1769659ce44be6be0187757627b82a8dabbc743d
Signed-off-by: ReallySnow <reallysnow233@gmail.com>
---
 res/values-zh-rCN/custom_strings.xml          |  25 ++++
 res/values/custom_strings.xml                 |   8 ++
 res/xml/display_settings.xml                  |   6 +
 res/xml/network_traffic_settings.xml          |  37 ++++++
 .../fragments/NetworkTrafficSettings.java     | 107 ++++++++++++++++++
 5 files changed, 183 insertions(+)
 create mode 100644 res/values-zh-rCN/custom_strings.xml
 create mode 100644 res/xml/network_traffic_settings.xml
 create mode 100644 src/com/android/settings/fragments/NetworkTrafficSettings.java

diff --git a/res/values-zh-rCN/custom_strings.xml b/res/values-zh-rCN/custom_strings.xml
new file mode 100644
index 0000000000..a7c49628c9
--- /dev/null
+++ b/res/values-zh-rCN/custom_strings.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--  Copyright (C) 2007 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+ -->
+
+<resources xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+    <string name="network_traffic_title">网络速率指示器</string>
+    <string name="network_traffic_summary">在状态栏中启用或禁用网络速率指示器</string>
+    <string name="network_traffic_state_title">启用"网络速率指示器"</string>
+    <string name="network_options_title">选项</string>
+    <string name="network_traffic_autohide_title">不活动时隐藏网络速率指示器</string>
+    <string name="network_traffic_autohide_summary">当网络速率低于 1 KB/s 时隐藏</string>
+</resources>
diff --git a/res/values/custom_strings.xml b/res/values/custom_strings.xml
index 1f5b5517d5..e7252c2ff4 100644
--- a/res/values/custom_strings.xml
+++ b/res/values/custom_strings.xml
@@ -25,6 +25,14 @@
     <string name="fingerprint_wake_unlock_touch">Listens for events while the screen is off</string>
     <string name="fingerprint_wake_unlock_press">Only listens for events once the screen is on</string>
 
+    <!-- Network traffic -->
+    <string name="network_traffic_title">Network traffic indicator</string>
+    <string name="network_traffic_summary">Enable or disable network speed indicator in status bar</string>
+    <string name="network_traffic_state_title">Enable "Network traffic indicator"</string>
+    <string name="network_options_title">Options</string>
+    <string name="network_traffic_autohide_title">Hide network traffic indicator when inactive</string>
+    <string name="network_traffic_autohide_summary">Hide when the network traffic is below 1 KB/s</string>
+    
     <!-- Preference and settings suggestion title text for screen off UDFPS  (device) [CHAR LIMIT=60]-->
     <string name="ambient_display_screen_off_udfps_title">Long press on fingerprint sensor to unlock device</string>
     <!-- Summary text for screen off UDFPS [CHAR LIMIT=NONE]-->
diff --git a/res/xml/display_settings.xml b/res/xml/display_settings.xml
index 2ac0f00654..15a5031168 100644
--- a/res/xml/display_settings.xml
+++ b/res/xml/display_settings.xml
@@ -97,6 +97,12 @@
     <PreferenceCategory
         android:title="@string/category_name_display_controls">
 
+        <Preference
+            android:key="network_traffic_settings"
+            android:fragment="com.android.settings.fragments.NetworkTrafficSettings"
+            android:title="@string/network_traffic_title"
+            android:summary="@string/network_traffic_summary"/>
+
         <!--
             Standard auto-rotation preference that will be shown when device state based
             auto-rotation settings are NOT available.
diff --git a/res/xml/network_traffic_settings.xml b/res/xml/network_traffic_settings.xml
new file mode 100644
index 0000000000..54f6b04986
--- /dev/null
+++ b/res/xml/network_traffic_settings.xml
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+     Copyright (C) 2022 Project Kaleidoscope
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<PreferenceScreen
+    android:title="@string/network_traffic_title"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:settings="http://schemas.android.com/apk/res/com.android.settings">
+
+    <com.android.settings.custom.preference.SystemSettingMainSwitchPreference
+        android:key="network_traffic_state"
+        android:title="@string/network_traffic_state_title"
+        android:defaultValue="false" />
+
+    <PreferenceCategory
+        android:title="@string/network_options_title">
+
+        <com.android.settings.custom.preference.SystemSettingSwitchPreference
+            android:key="network_traffic_autohide_threshold"
+            android:title="@string/network_traffic_autohide_title"
+            android:summary="@string/network_traffic_autohide_summary"
+            android:dependency="network_traffic_state"
+            android:defaultValue="false" />
+    </PreferenceCategory>
+</PreferenceScreen>
diff --git a/src/com/android/settings/fragments/NetworkTrafficSettings.java b/src/com/android/settings/fragments/NetworkTrafficSettings.java
new file mode 100644
index 0000000000..fca0642153
--- /dev/null
+++ b/src/com/android/settings/fragments/NetworkTrafficSettings.java
@@ -0,0 +1,107 @@
+/*
+ * Copyright (C) 2022 Project Kaleidoscope
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.settings.fragments;
+
+import android.content.ContentResolver;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.content.pm.ResolveInfo;
+import android.content.res.Resources;
+import android.os.Bundle;
+import android.os.UserHandle;
+import android.provider.Settings;
+import android.text.TextUtils;
+import android.util.Log;
+import android.view.View;
+
+import androidx.preference.ListPreference;
+import androidx.preference.Preference;
+import androidx.preference.PreferenceGroup;
+import androidx.preference.PreferenceScreen;
+import androidx.preference.PreferenceCategory;
+import androidx.preference.Preference.OnPreferenceChangeListener;
+import androidx.preference.PreferenceFragment;
+import androidx.preference.SwitchPreference;
+
+import com.android.internal.logging.nano.MetricsProto;
+
+import com.android.settings.R;
+import com.android.settings.SettingsPreferenceFragment;
+import com.android.settings.Utils;
+
+import java.util.Locale;
+import java.util.List;
+import java.util.ArrayList;
+import java.util.Map;
+import java.util.HashMap;
+import java.util.Collections;
+
+import com.android.settings.custom.preference.SystemSettingSwitchPreference;
+import com.android.settings.custom.preference.SystemSettingMainSwitchPreference;
+
+public class NetworkTrafficSettings extends SettingsPreferenceFragment implements
+        OnPreferenceChangeListener {
+
+    private SystemSettingSwitchPreference mThreshold;
+    private SystemSettingMainSwitchPreference mNetMonitor;
+
+    @Override
+    public void onCreate(Bundle icicle) {
+        super.onCreate(icicle);
+
+        addPreferencesFromResource(R.xml.network_traffic_settings);
+
+        final ContentResolver resolver = getActivity().getContentResolver();
+
+        boolean isNetMonitorEnabled = Settings.System.getIntForUser(resolver,
+                Settings.System.NETWORK_TRAFFIC_STATE, 1, UserHandle.USER_CURRENT) == 1;
+        mNetMonitor = (SystemSettingMainSwitchPreference) findPreference("network_traffic_state");
+        mNetMonitor.setChecked(isNetMonitorEnabled);
+        mNetMonitor.setOnPreferenceChangeListener(this);
+
+        boolean isThresholdEnabled = Settings.System.getIntForUser(resolver,
+                Settings.System.NETWORK_TRAFFIC_AUTOHIDE_THRESHOLD, 0, UserHandle.USER_CURRENT) == 1;
+        mThreshold = (SystemSettingSwitchPreference) findPreference("network_traffic_autohide_threshold");
+        mThreshold.setChecked(isThresholdEnabled);
+        mThreshold.setOnPreferenceChangeListener(this);
+    }
+
+    @Override
+    public boolean onPreferenceChange(Preference preference, Object objValue) {
+        if (preference == mNetMonitor) {
+            boolean value = (Boolean) objValue;
+            Settings.System.putIntForUser(getActivity().getContentResolver(),
+                    Settings.System.NETWORK_TRAFFIC_STATE, value ? 1 : 0,
+                    UserHandle.USER_CURRENT);
+            mNetMonitor.setChecked(value);
+            mThreshold.setChecked(value);
+            return true;
+        } else if (preference == mThreshold) {
+            boolean value = (Boolean) objValue;
+            Settings.System.putIntForUser(getContentResolver(),
+                    Settings.System.NETWORK_TRAFFIC_AUTOHIDE_THRESHOLD, value ? 1 : 0,
+                    UserHandle.USER_CURRENT);
+            return true;
+        }
+        return false;
+    }
+
+    @Override
+    public int getMetricsCategory() {
+        return MetricsProto.MetricsEvent.CUSTOM_SETTINGS;
+    }
+}
-- 
2.32.0

